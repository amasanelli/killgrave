import{_ as l,r as p,o as i,c as r,a as n,b as s,d as t,e as a}from"./app-GKjJbFgT.js";const c={},u=n("h1",{id:"config-reference",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#config-reference","aria-hidden":"true"},"#"),s(" Config Reference")],-1),d=["src"],v=a('<h2 id="killgrave" tabindex="-1"><a class="header-anchor" href="#killgrave" aria-hidden="true">#</a> Killgrave</h2><p>Killgrave can be used without explicitly providing any configuration. However, you can tune up some of their settings like the host and port where the mock server is listening to, among others, by providing some configuration settings.</p><p>To provide those settings, you can either use the available <a href="/cli">CLI</a> flags or use the <code>-config</code> flag to provide the path to a settings file. In such case, you can either use JSON or YAML.</p><h3 id="basic" tabindex="-1"><a class="header-anchor" href="#basic" aria-hidden="true">#</a> Basic</h3><p>Minimal configuration attributes needed to get your mock up and running.</p><h4 id="host" tabindex="-1"><a class="header-anchor" href="#host" aria-hidden="true">#</a> host</h4><ul><li>Type: <code>string</code></li><li>Default: <code>localhost</code></li></ul>',7),k={href:"https://www.docker.com/",target:"_blank",rel:"noopener noreferrer"},m=a(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;host&quot;</span><span class="token operator">:</span> <span class="token string">&quot;localhost&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">host</span><span class="token punctuation">:</span> <span class="token string">&quot;localhost&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="port" tabindex="-1"><a class="header-anchor" href="#port" aria-hidden="true">#</a> port</h4><ul><li>Type: <code>number</code></li><li>Default: <code>3000</code></li></ul>`,4),h={href:"https://www.docker.com/",target:"_blank",rel:"noopener noreferrer"},b=a(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">3000</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">3000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="imposters-path" tabindex="-1"><a class="header-anchor" href="#imposters-path" aria-hidden="true">#</a> imposters_path</h4><ul><li>Type: <code>string</code></li><li>Default: <code>imposters</code></li></ul><p>Specify the directory the imposter files (either <code>.imp.json</code>, <code>.imp.yml</code> or <code>.imp.yaml</code>) will be loaded from. On a regular set up, this directory will contain multiple of those imposter files and the directories with <code>schemas</code> and <code>responses</code>.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;imposters_path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;imposters&quot;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">imposters_path</span><span class="token punctuation">:</span> imposters
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="proxy" tabindex="-1"><a class="header-anchor" href="#proxy" aria-hidden="true">#</a> Proxy</h3><p>Set up a proxy to redirect the incoming requests as you want.</p><h4 id="mode" tabindex="-1"><a class="header-anchor" href="#mode" aria-hidden="true">#</a> mode</h4><ul><li>Type: <code>string</code></li><li>Default: <code>none</code></li></ul><p>Specify the proxy mode for the Killgrave server. The default value is <code>none</code> which means no proxy. Use <code>missing</code> to redirect only those incoming requests that aren&#39;t defined within the imposters. Use <code>all</code> to redirect all incoming requests.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;proxy&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;mode&quot;</span><span class="token operator">:</span> <span class="token string">&quot;missing&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">proxy</span><span class="token punctuation">:</span>
  <span class="token key atrule">mode</span><span class="token punctuation">:</span> missing
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="url" tabindex="-1"><a class="header-anchor" href="#url" aria-hidden="true">#</a> url</h4><ul><li>Type: <code>string</code></li><li>Default: -</li></ul><p>Specify the url for the Killgrave&#39;s proxy. The incoming requests will be redirected to this url based on the proxy mode.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;proxy&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://example.com&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">proxy</span><span class="token punctuation">:</span>
  <span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//example.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cors" tabindex="-1"><a class="header-anchor" href="#cors" aria-hidden="true">#</a> CORS</h3>`,20),g={href:"https://developer.mozilla.org/docs/Web/HTTP/CORS",target:"_blank",rel:"noopener noreferrer"},y=a(`<h4 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> methods</h4><ul><li>Type: <code>string array</code></li><li>Default: <code>[&quot;GET&quot;, &quot;HEAD&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;OPTIONS&quot;, &quot;DELETE&quot;, &quot;PATCH&quot;, &quot;TRACE&quot;, &quot;CONNECT&quot;]</code></li></ul><p>Represents the <code>Access-Control-Request-Method</code> header.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;cors&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;methods&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">cors</span><span class="token punctuation">:</span>
  <span class="token key atrule">methods</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="headers" tabindex="-1"><a class="header-anchor" href="#headers" aria-hidden="true">#</a> headers</h4><ul><li>Type: <code>string array</code></li><li>Default: <code>[&quot;X-Requested-With&quot;, &quot;Content-Type&quot;, &quot;Authorization&quot;]</code></li></ul><p>Represents the <code>Access-Control-Request-Headers</code> header.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;cors&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;headers&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">cors</span><span class="token punctuation">:</span>
  <span class="token key atrule">headers</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="exposed-headers" tabindex="-1"><a class="header-anchor" href="#exposed-headers" aria-hidden="true">#</a> exposed_headers</h4><ul><li>Type: <code>string array</code></li><li>Default: <code>[&quot;Cache-Control&quot;, &quot;Content-Language&quot;, &quot;Content-Type&quot;, &quot;Expires&quot;, &quot;Last-Modified&quot;, &quot;Pragma&quot;]</code></li></ul><p>Represents the <code>Access-Control-Expose-Headers</code> header.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;cors&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;exposed_headers&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Cache-Control&quot;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">cors</span><span class="token punctuation">:</span>
  <span class="token key atrule">exposed_headers</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Cache-Control&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="origins" tabindex="-1"><a class="header-anchor" href="#origins" aria-hidden="true">#</a> origins</h4><ul><li>Type: <code>string array</code></li><li>Default: <code>[]</code></li></ul><p>Represents the <code>Access-Control-Allow-Origin</code> header.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;cors&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;origins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">cors</span><span class="token punctuation">:</span>
  <span class="token key atrule">origins</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="allow-credentials" tabindex="-1"><a class="header-anchor" href="#allow-credentials" aria-hidden="true">#</a> allow_credentials</h4><ul><li>Type: <code>boolean</code></li><li>Default: <code>false</code></li></ul><p>Enables or disables the <code>Access-Control-Allow-Credentials</code> header.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;cors&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;allow_credentials&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">cors</span><span class="token punctuation">:</span>
  <span class="token key atrule">allow_credentials</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="security" tabindex="-1"><a class="header-anchor" href="#security" aria-hidden="true">#</a> Security</h3><p>Sometimes you may want to simulate a production-like behavior with your mock servers, for instance to verify that your frontend application manages correctly HTTPS/TLS connections.</p><h4 id="secure" tabindex="-1"><a class="header-anchor" href="#secure" aria-hidden="true">#</a> secure</h4><ul><li>Type: <code>boolean</code></li><li>Default: <code>false</code></li></ul><p>Expose the mock server through HTTP over TLS(SSL).</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;secure&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">secure</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="hot-reloads" tabindex="-1"><a class="header-anchor" href="#hot-reloads" aria-hidden="true">#</a> Hot reloads</h3><p>When building the imposters to mock your server, you way want to reduce the feedback loop on configuration changes.</p><h4 id="watcher" tabindex="-1"><a class="header-anchor" href="#watcher" aria-hidden="true">#</a> watcher</h4><ul><li>Type: <code>boolean</code></li><li>Default: <code>false</code></li></ul><p>Enable the file watcher to hot reload the mock server on every imposters change.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;watcher&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">watcher</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="full-example" tabindex="-1"><a class="header-anchor" href="#full-example" aria-hidden="true">#</a> Full example</h3><p>See below a full example of the configuration file:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>
    <span class="token property">&quot;host&quot;</span><span class="token operator">:</span> <span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;imposters_path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;imposters&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;proxy&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;mode&quot;</span><span class="token operator">:</span> <span class="token string">&quot;missing&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;cors&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;methods&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;GET&quot;</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;headers&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;Content-Type&quot;</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;exposed_headers&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;Cache-Control&quot;</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;origins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;*&quot;</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;allow_credentials&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;secure&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;watcher&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">3000</span>
<span class="token key atrule">host</span><span class="token punctuation">:</span> <span class="token string">&quot;localhost&quot;</span>
<span class="token key atrule">imposters_path</span><span class="token punctuation">:</span> <span class="token string">&quot;imposters&quot;</span>
<span class="token key atrule">proxy</span><span class="token punctuation">:</span>
  <span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//example.com
  <span class="token key atrule">mode</span><span class="token punctuation">:</span> missing
<span class="token key atrule">cors</span><span class="token punctuation">:</span>
  <span class="token key atrule">methods</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">]</span>
  <span class="token key atrule">headers</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">]</span>
  <span class="token key atrule">exposed_headers</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Cache-Control&quot;</span><span class="token punctuation">]</span>
  <span class="token key atrule">origins</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">]</span>
  <span class="token key atrule">allow_credentials</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">secure</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">watcher</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="imposters" tabindex="-1"><a class="header-anchor" href="#imposters" aria-hidden="true">#</a> Imposters</h2><p>Imposters are the first-class citizens in Killgrave, they define how the mock server will respond to the incoming requests. You can use either JSON or YAML to define them.</p><h3 id="request" tabindex="-1"><a class="header-anchor" href="#request" aria-hidden="true">#</a> Request</h3><p>The <code>request</code> configuration is used to evaluate whether an incoming request matches the imposter or not. If there&#39;s a match, the mock server will respond with the imposter&#39;s response.</p><h4 id="method" tabindex="-1"><a class="header-anchor" href="#method" aria-hidden="true">#</a> method</h4><ul><li>Type: <code>string</code></li><li>Default: -</li></ul><p>Specify the expected HTTP method.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;request&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;method&quot;</span><span class="token operator">:</span> <span class="token string">&quot;POST&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">request</span><span class="token punctuation">:</span>
  <span class="token key atrule">method</span><span class="token punctuation">:</span> <span class="token string">&quot;POST&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="endpoint" tabindex="-1"><a class="header-anchor" href="#endpoint" aria-hidden="true">#</a> endpoint</h4><ul><li>Type: <code>string</code></li><li>Default: -</li></ul>`,54),q={href:"https://github.com/gorilla/mux#examples",target:"_blank",rel:"noopener noreferrer"},f=a(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;request&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;endpoint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/gophers&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">request</span><span class="token punctuation">:</span>
  <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> /gophers
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="schemafile" tabindex="-1"><a class="header-anchor" href="#schemafile" aria-hidden="true">#</a> schemaFile</h4><ul><li>Type: <code>string</code></li><li>Default: -</li></ul><p>Specify the path to the file that contains the expected JSON schema.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;request&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;schemaFile&quot;</span><span class="token operator">:</span> <span class="token string">&quot;schemas/create_gopher_request.json&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">request</span><span class="token punctuation">:</span>
  <span class="token key atrule">schemaFile</span><span class="token punctuation">:</span> <span class="token string">&quot;schemas/create_gopher_request.json&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="params" tabindex="-1"><a class="header-anchor" href="#params" aria-hidden="true">#</a> params</h4><ul><li>Type: <code>string map</code></li><li>Default: -</li></ul>`,9),x={href:"https://github.com/gorilla/mux#examples",target:"_blank",rel:"noopener noreferrer"},j=a(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;request&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;params&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;01EKPT&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">request</span><span class="token punctuation">:</span>
  <span class="token key atrule">params</span><span class="token punctuation">:</span>
    <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">&quot;01EKPT&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="headers-1" tabindex="-1"><a class="header-anchor" href="#headers-1" aria-hidden="true">#</a> headers</h4><ul><li>Type: <code>string map</code></li><li>Default: -</li></ul><p>Specify the expected HTTP headers.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;request&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;headers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;Content-Type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;Return-Error&quot;</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">request</span><span class="token punctuation">:</span>
  <span class="token key atrule">headers</span><span class="token punctuation">:</span>
    <span class="token key atrule">Content-Type</span><span class="token punctuation">:</span> <span class="token string">&quot;application/json&quot;</span>
    <span class="token key atrule">Return-Error</span><span class="token punctuation">:</span> <span class="token string">&quot;error&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="response" tabindex="-1"><a class="header-anchor" href="#response" aria-hidden="true">#</a> Response</h3><p>The <code>response</code> configuration is used to build the response in case of match with the incoming request.</p><h4 id="status" tabindex="-1"><a class="header-anchor" href="#status" aria-hidden="true">#</a> status</h4><ul><li>Type: <code>number</code></li><li>Default: <code>200</code></li></ul><p>Specify the response&#39;s HTTP status code.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;response&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token number">401</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">response</span><span class="token punctuation">:</span>
  <span class="token key atrule">status</span><span class="token punctuation">:</span> <span class="token number">401</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="body" tabindex="-1"><a class="header-anchor" href="#body" aria-hidden="true">#</a> body</h4><ul><li>Type: <code>string</code></li><li>Default: -</li></ul><p>Specify the raw contents (as string) to be returned as the response body. You could use a stringified JSON, for instance.</p><p>Although, in such cases where the desired response body is a complex payload (e.g. a JSON object), we recommend to use a separate file in combination with the <a href="#bodyfile"><code>bodyFile</code></a> request attribute.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;response&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;body&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Simple response body&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">response</span><span class="token punctuation">:</span>
  <span class="token key atrule">body</span><span class="token punctuation">:</span> <span class="token string">&quot;Simple response body&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="bodyfile" tabindex="-1"><a class="header-anchor" href="#bodyfile" aria-hidden="true">#</a> bodyFile</h4><ul><li>Type: <code>string</code></li><li>Default: -</li></ul><p>Specify the path to the file that contains the response body&#39;s contents.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;response&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;bodyFile&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/path/to/file&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">response</span><span class="token punctuation">:</span>
  <span class="token key atrule">bodyFile</span><span class="token punctuation">:</span> <span class="token string">&quot;/path/to/file&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="headers-2" tabindex="-1"><a class="header-anchor" href="#headers-2" aria-hidden="true">#</a> headers</h4><ul><li>Type: <code>string map</code></li><li>Default: -</li></ul><p>Specify the response&#39;s HTTP headers.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;response&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;headers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;Content-Type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;Return-Error&quot;</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">response</span><span class="token punctuation">:</span>
  <span class="token key atrule">headers</span><span class="token punctuation">:</span>
    <span class="token key atrule">Content-Type</span><span class="token punctuation">:</span> <span class="token string">&quot;application/json&quot;</span>
    <span class="token key atrule">Return-Error</span><span class="token punctuation">:</span> <span class="token string">&quot;error&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="delay" tabindex="-1"><a class="header-anchor" href="#delay" aria-hidden="true">#</a> delay</h4><ul><li>Type: <code>string</code></li><li>Default: -</li></ul><p>Specify the response delay. It is really helpful to reproduce real-world examples and/or to simulate situations with peaks of load where the responses are considerably slow.</p><p>You can use either a fixed time (single value) or an interval (two values joined by <code>:</code>).</p>`,34),T={href:"https://pkg.go.dev/time#ParseDuration",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"time.ParseDuration",-1),w=a(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;response&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;delay&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2s:5s&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">response</span><span class="token punctuation">:</span>
  <span class="token key atrule">delay</span><span class="token punctuation">:</span> <span class="token string">&quot;2s:5s&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="full-examples" tabindex="-1"><a class="header-anchor" href="#full-examples" aria-hidden="true">#</a> Full examples</h3><p>See below some full examples:</p><h4 id="request-1" tabindex="-1"><a class="header-anchor" href="#request-1" aria-hidden="true">#</a> Request</h4><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;request&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;method&quot;</span><span class="token operator">:</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;endpoint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/gophers&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;schemaFile&quot;</span><span class="token operator">:</span> <span class="token string">&quot;schemas/create_gopher_request.json&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;params&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;01EKPT&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;headers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;Content-Type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;Return-Error&quot;</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">request</span><span class="token punctuation">:</span>
  <span class="token key atrule">method</span><span class="token punctuation">:</span> <span class="token string">&quot;POST&quot;</span>
  <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> <span class="token string">&quot;/gophers&quot;</span>
  <span class="token key atrule">schemaFile&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;schemas/create_gopher_request.json&quot;</span>
  <span class="token key atrule">params&quot;</span><span class="token punctuation">:</span>
    <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">&quot;01EKPT&quot;</span>
  <span class="token key atrule">headers</span><span class="token punctuation">:</span>
    <span class="token key atrule">Content-Type</span><span class="token punctuation">:</span> <span class="token string">&quot;application/json&quot;</span>
    <span class="token key atrule">Return-Error</span><span class="token punctuation">:</span> <span class="token string">&quot;error&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="response-1" tabindex="-1"><a class="header-anchor" href="#response-1" aria-hidden="true">#</a> Response</h4><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;response&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token number">401</span><span class="token punctuation">,</span>
      <span class="token property">&quot;body&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Simple response body&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;bodyFile&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/path/to/file&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;headers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;Content-Type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;Return-Error&quot;</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;delay&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2s:5s&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">response</span><span class="token punctuation">:</span>
  <span class="token key atrule">status</span><span class="token punctuation">:</span> <span class="token number">401</span>
  <span class="token key atrule">body</span><span class="token punctuation">:</span> <span class="token string">&quot;Simple response body&quot;</span>
  <span class="token key atrule">bodyFile</span><span class="token punctuation">:</span> <span class="token string">&quot;/path/to/file&quot;</span>
  <span class="token key atrule">headers</span><span class="token punctuation">:</span>
    <span class="token key atrule">Content-Type</span><span class="token punctuation">:</span> <span class="token string">&quot;application/json&quot;</span>
    <span class="token key atrule">Return-Error</span><span class="token punctuation">:</span> <span class="token string">&quot;error&quot;</span>
  <span class="token key atrule">delay</span><span class="token punctuation">:</span> <span class="token string">&quot;2s:5s&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>Note from the examples above that you should only provide one of <a href="#body"><code>body</code></a> or <a href="#bodyfile"><code>bodyFile</code></a>, but not both. Here both are defined just for the sake of showing a full example.</em></p>`,11);function S(o,C){const e=p("ExternalLinkIcon");return i(),r("div",null,[u,n("img",{src:o.$withBase("/img/killgrave.png"),alt:"killgrave",style:{"max-width":"130px"}},null,8,d),v,n("p",null,[s("Specify the host for the Killgrave server. If you are using "),n("a",k,[s("Docker"),t(e)]),s(", you must override the default value. Otherwise, the server will be reachable only from the container itself, so probably it won't work as you expect.")]),m,n("p",null,[s("Specify the port for the Killgrave server. If you are using "),n("a",h,[s("Docker"),t(e)]),s(", you need to forward it.")]),b,n("p",null,[s("Set up the "),n("a",g,[s("cross-origin resource sharing (CORS)"),t(e)]),s(" mechanism for the Killgrave server. Especially useful when mocking servers that are consumed by frontend applications.")]),y,n("p",null,[s("Specify the expected URL endpoint (path). You can define URL parameters and use regular expressions. Look at "),n("a",q,[s("Gorilla Mux examples"),t(e)]),s(" to see how regular expressions work.")]),f,n("p",null,[s("Specify the expected URL params. You can use regular expressions. Look at "),n("a",x,[s("Gorilla Mux examples"),t(e)]),s(" to see how regular expressions work.")]),j,n("p",null,[s("Look at Go "),n("a",T,[_,t(e)]),s(" examples to see the accepted format to specify the time durations of the response delay.")]),w])}const D=l(c,[["render",S],["__file","index.html.vue"]]);export{D as default};
