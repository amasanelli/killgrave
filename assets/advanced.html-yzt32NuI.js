import{_ as n,r as s,o as c,c as i,a as o,b as e,d as t,e as a}from"./app-lnPknyyT.js";const l={},d=o("h1",{id:"advanced-features",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#advanced-features","aria-hidden":"true"},"#"),e(" Advanced features")],-1),h=o("p",null,"Killgrave has some advanced features:",-1),u=o("h2",{id:"cors",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#cors","aria-hidden":"true"},"#"),e(" CORS")],-1),g={href:"https://developer.mozilla.org/docs/Web/HTTP/CORS",target:"_blank",rel:"noopener noreferrer"},p={href:"/config/#cors",target:"_blank",rel:"noopener noreferrer"},f=a("<ul><li><strong>methods</strong>: <code>Access-Control-Request-Method</code></li><li><strong>headers</strong>: <code>Access-Control-Request-Headers</code></li><li><strong>exposed_headers</strong>: <code>Access-Control-Expose-Headers</code></li><li><strong>origins</strong>: <code>Access-Control-Allow-Origin</code></li><li><strong>allow_credentials</strong>: <code>Access-Control-Allow-Credentials</code></li></ul>",1),_={href:"/config/#cors",target:"_blank",rel:"noopener noreferrer"},m=o("h2",{id:"proxy",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#proxy","aria-hidden":"true"},"#"),e(" Proxy")],-1),v=o("code",null,"proxy-mode",-1),b=o("code",null,"proxy-url",-1),y={href:"/config",target:"_blank",rel:"noopener noreferrer"},x=a('<ul><li><code>none</code>: <em><strong>(Default)</strong></em> Killgrave won&#39;t behave as a proxy and will only use the configured imposters.</li><li><code>missing</code>: Killgrave will try to match the request with a configured imposter. Otherwise, it will forward the request to the configured proxy.</li><li><code>all</code>: Killgrave will forward all the incoming requests to the configured proxy.</li></ul><p>The <code>proxy-url</code> must be the root path of the proxy server. For instance, if we have an API running on <code>http://example.com/things</code>, the configured <code>proxy-url</code> should be <code>http://example.com</code>.</p><h2 id="secure-http-over-tls" tabindex="-1"><a class="header-anchor" href="#secure-http-over-tls" aria-hidden="true">#</a> Secure (HTTP over TLS)</h2><p>Killgrave has a secure mode that lets you expose your mock servers over secure connections by using HTTP over TLS/SSL (<strong>HTTPS</strong>).</p><p>You can use the <code>secure</code> setting to enable the secure mode. Disabled by default.</p><p>If enabled, the mock server will use TLS options with a dummy certificate, to make it work with the <code>HTTPS</code> protocol.</p><h2 id="watcher" tabindex="-1"><a class="header-anchor" href="#watcher" aria-hidden="true">#</a> Watcher</h2><p>Killgrave has a file watcher that lets you hot reload your mock servers on every imposters change.</p><p>You can use the <code>watcher</code> setting to enable the secure mode. Disabled by default.</p><p>If enabled, the file watcher will be watching changes on the imposters directory so the mock server will be restarted on every imposters change.</p><h2 id="debugger" tabindex="-1"><a class="header-anchor" href="#debugger" aria-hidden="true">#</a> Debugger</h2><p>Killgrave has an interactive mode that lets you debug the behavior of your mock server.</p><p>You can use the <code>debugger</code> settings to enable the interactive mode. Disabled by default.</p>',13),w={href:"/guide/debug-intro",target:"_blank",rel:"noopener noreferrer"};function k(T,S){const r=s("ExternalLinkIcon");return c(),i("div",null,[d,h,u,o("p",null,[e("If you want to use Killgrave from a frontend application, you should consider configuring "),o("a",g,[e("cross-origin resource sharing (CORS)"),t(r)]),e(".")]),o("p",null,[e("In the "),o("a",p,[e("CORS"),t(r)]),e(" section of the file you can find the following options:")]),f,o("p",null,[e("You can find further details "),o("a",_,[e("here"),t(r)]),e(".")]),m,o("p",null,[e("You can use Killgrave in proxy mode using the flags "),v,e(" and "),b,e(" or their equivalent fields in the "),o("a",y,[e("configuration file"),t(r)]),e(". The following three proxy modes are available:")]),x,o("p",null,[e("You can find further details "),o("a",w,[e("here"),t(r)]),e(".")])])}const A=n(l,[["render",k],["__file","advanced.html.vue"]]);export{A as default};
